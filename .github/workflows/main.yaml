name: Build and deploy main
on:
  push:
    branches:
      - main
    paths-ignore:
      - "*.md"
  repository_dispatch:
    types: [deploy]
jobs:
  test-build-deploy:
    permissions:
      contents: write # for dependency graph & sarif
      security-events: write # push sarif to github security
      id-token: write # for nais docker-build-push
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.docker-push.outputs.image }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          persist-credentials: false
      - uses: actions/setup-java@3a4f6e1af504cf6a31855fa899c6aa5355ba6c12
        with:
          java-version: 21
          distribution: temurin
      - uses: gradle/actions/setup-gradle@94baf225fe0a508e581a564467443d0e2379123b
      - name: Test & build
        run: ./gradlew test build
      - name: Build & push docker image + SBOM
        uses: nais/docker-build-push@aed4d69de423d70d995a9fac4bb00dedb7b00f91
        id: docker-push
        with:
          team: appsec
          pull: true
      - name: Generate and submit dependency graph
        uses: gradle/actions/dependency-submission@94baf225fe0a508e581a564467443d0e2379123b
      - name: Scan docker image for secrets
        uses: aquasecurity/trivy-action@6c175e9c4083a92bbca2f9724c8a5e33bc2d97a5
        with:
          image-ref: '${{ steps.docker-push.outputs.image }}'
          format: 'sarif'
          scanners: 'secret'
          output: 'trivy.sarif'
      - uses: github/codeql-action/upload-sarif@1b549b9259bda1cb5ddde3b41741a82a2d15a841
        with:
          sarif_file: 'trivy.sarif'
  deploy:
    runs-on: ubuntu-latest
    permissions:
        contents: read
    needs: test-build-deploy
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          persist-credentials: false
      #- uses: nais/deploy/actions/deploy@7c152a10f4da3ca352d57a25eba0b3a8e04882f9
      #  env:
      #    RESOURCE: .nais/nais.yaml
      #    CLUSTER: prod-gcp
      #    IMAGE: ${{ needs.test-build-deploy.outputs.image }}
